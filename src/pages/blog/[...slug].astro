---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<'blog'>;
};

const { post } = Astro.props;
const { Content } = await post.render();
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <article class="max-w-4xl mx-auto">
    <!-- Back button -->
    <a href="/blog" class="glass-button inline-flex items-center gap-2 mb-8 hover:scale-105 transition-transform">
      ‚Üê Back to Blog
    </a>

    <!-- Article header -->
    <header class="glass-panel border border-white/40 rounded-3xl p-12 mb-12 shadow-glass">
      <h1 class="text-5xl md:text-6xl font-bold mb-6 glow-text">
        {post.data.title}
      </h1>
      
      <div class="flex flex-wrap gap-4 items-center text-gray-600 mb-6">
        <time class="flex items-center gap-2">
          üìÖ {post.data.date.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
      </div>

      {post.data.tags && post.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2">
          {post.data.tags.map((tag) => (
            <span class="bg-blue-100 text-blue-700 border border-blue-200 rounded-full px-4 py-2">
              #{tag}
            </span>
          ))}
        </div>
      )}
    </header>

    <!-- Article content -->
    <div class="glass-panel border border-white/40 rounded-3xl p-12 shadow-glass prose prose-slate prose-lg max-w-none">
      <Content />
    </div>
  </article>
</BaseLayout>

<style is:global>
  /* Prose styling for blog content - Light theme */
  .prose {
    color: #374151;
  }

  .prose h2 {
    @apply text-4xl font-bold mt-12 mb-6 text-gray-800;
  }

  .prose h3 {
    @apply text-3xl font-bold mt-8 mb-4 text-gray-800;
  }

  .prose h4 {
    @apply text-2xl font-bold mt-6 mb-3 text-gray-800;
  }

  .prose p {
    @apply text-lg leading-relaxed mb-6 text-gray-700;
  }

  .prose a {
    @apply text-purple-600 hover:text-purple-700 underline decoration-2 underline-offset-4 transition-colors;
  }

  .prose strong {
    @apply text-gray-900 font-bold;
  }

  .prose em {
    @apply text-gray-700 italic;
  }

  .prose ul, .prose ol {
    @apply my-6 space-y-2;
  }

  .prose li {
    @apply text-gray-700;
  }

  .prose code {
    @apply bg-purple-50 border border-purple-200 rounded px-2 py-1 text-purple-700;
  }

  .prose pre {
    @apply bg-gray-800 text-gray-100 border border-gray-700 rounded-2xl p-6 overflow-x-auto my-8;
  }

  .prose pre code {
    @apply bg-transparent border-0 p-0 text-gray-100;
  }

  .prose blockquote {
    @apply border-l-4 border-purple-500 pl-6 italic text-gray-600 my-8;
  }

  .prose img {
    @apply rounded-2xl shadow-2xl my-8;
  }

  .prose hr {
    @apply border-gray-300 my-12;
  }

  /* Table styles */
  .prose table {
    @apply w-full my-8 bg-white border border-gray-200 rounded-2xl overflow-hidden;
  }

  .prose th {
    @apply bg-gray-100 p-4 text-left font-bold text-gray-800;
  }

  .prose td {
    @apply p-4 border-t border-gray-200 text-gray-700;
  }
</style>

